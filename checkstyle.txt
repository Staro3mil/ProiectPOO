Starting audit...
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:3:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:21:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:25:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:25:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:29:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:33:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:33:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:37:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:41:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:41:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:45:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:49:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:49:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:53:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:57:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:57:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:61:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:65:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:65:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:69:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:73:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:73:26: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:77:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:81:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Action.java:81:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:13:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:16:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'toNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'toNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:16:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:26:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:30:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:30:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:34:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:38:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:38:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:42:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:46:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:46:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:50:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:54:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:54:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:58:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:62:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Credentials.java:62:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:7:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:11:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:11:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:15:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:19:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Filter.java:19:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:10:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:14:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:18:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:18:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:22:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:26:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:26:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:30:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:34:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Input.java:34:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:17:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toNode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:17:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:24:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:24:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:29:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:29:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:34:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:34:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:41:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:45:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:45:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:49:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:53:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:53:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:57:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:61:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:61:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:65:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:69:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:69:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:73:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:77:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:77:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:81:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:85:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Movie.java:85:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:11:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\Sort.java:19:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\User.java:8:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\User.java:12:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\fileio\User.java:12:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:8:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:9:13: Using the '.*' form of import should be avoided - pages.*. [AvoidStarImport]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:12:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:24:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Main.java:24:54: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:4:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:9:5: Class 'Login' looks like designed for extension (can be subclassed), but the method 'OnPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'OnPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:9:17: Name 'OnPage' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:9:24: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:9:40: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:10:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Login.java:10:55: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:8:8: Unused import - fileio.User. [UnusedImports]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:21:17: Name 'OnPage' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:25:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'Error' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'Error' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:25:17: Name 'Error' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:25:23: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:29:34: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:31:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:44: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:44:17: Parameter currentPage should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:44:37: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:44:67: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:44:92: Parameter userMovies should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:51:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:55:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:55:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:59:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:63:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:63:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:67:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:71:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:71:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:75:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getUserMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getUserMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:79:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setUserMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setUserMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Page.java:79:31: Parameter userMovies should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:8:5: Class 'Unauth' looks like designed for extension (can be subclassed), but the method 'ChangePage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Unauth' final or making the method 'ChangePage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:8:17: Name 'ChangePage' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:8:28: Parameter nextPage should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:9:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\pages\Unauth.java:19:19: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\David\Documents\GitHub\ProiectPOO\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 146 errors.
